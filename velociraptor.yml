allow:
  - read
  - write
  - run

scripts:
  main-sample:
    desc: Runs main script with sample.ts
    cmd: main.ts examples/sample.ts

  main-test:
    desc: Runs main script with test.ts
    cmd: main.ts examples/test.ts

  main-server:
    desc: Runs main script with server.ts
    cmd: main.ts examples/server.ts
    allow:
      - net

  install:
    desc: Install main script
    cmd: deno install --force --name dex main.ts
    reload: true

  deps:
    desc: Update dependencies with ensuring pass tests
    cmd: udd deps.ts dev_deps.ts --test="vr test"

  lint:
    desc: Runs lint
    cmd: deno lint --ignore=cov_profile

  fmt:
    desc: Runs format
    cmd: deno fmt --ignore=cov_profile

  pre-commit:
    cmd: |
      FILES=$(git diff --staged --name-only --diff-filter=ACMR "*.ts")
          [ -z "$FILES" ] && exit 0
          echo "$FILES" | xargs deno lint
          echo "$FILES" | xargs deno fmt
          # echo "$FILES" | xargs git add
    desc: Lints and formats staged files
    gitHook: pre-commit

  test:
    desc: Runs the tests
    cmd: deno test --reload
    gitHook: pre-push

  cov:
    desc: Shows uncovered lists
    cmd:
      - vr test --coverage=cov_profile
      - deno coverage cov_profile

  ci:
    desc: Runs lint, check format and test
    cmd:
      - vr lint
      - vr fmt --check
      - vr test

  commitlint:
    # dependencies: commitlint and @commitlint/config-conventional
    # yarn global add commitlint @commitlint/config-conventional
    desc: Checks commit messages format with commitlint
    cmd: commitlint -x @commitlint/config-conventional -e ${GIT_ARGS[1]}
    gitHook: commit-msg
